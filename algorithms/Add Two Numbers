/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            int carry=0;
    ListNode head=null;
    ListNode temp=null;
    
    while(l1!=null && l2!=null)
    {
       int a=l1.val+l2.val+carry;
       carry=0;
       int v=a%10;
       carry=a/10;
       
       ListNode nn=new ListNode();
       nn.val=v;  
        
       if(head==null)
        {
          head=nn;
          temp=nn; 
        }
        
        else
        { temp.next=nn;
          temp=temp.next;
        }
        
       l1=l1.next;
       l2=l2.next;  
    }
    
    while(l1!=null)
    {
      int a=l1.val+carry;  
       carry=0;
       int v=a%10;
       carry=a/10;
        
      ListNode nn=new ListNode();
       nn.val=v;  
        
       if(head==null)
        {
          head=nn;
          temp=nn; 
        }
        
        else
        { temp.next=nn;
          temp=temp.next;
        }
        
       l1=l1.next;
    }
    
    while(l2!=null)
    {
       int a=l2.val+carry;  
       carry=0;
       int v=a%10;
       carry=a/10;
        
       ListNode nn=new ListNode();
       nn.val=v;  
        
       if(head==null)
        {
          head=nn;
          temp=nn; 
        }
        
        else
        { temp.next=nn;
          temp=temp.next;
        }
        
       l2=l2.next;   
    }
    
    if(carry!=0)
     {
         ListNode nn=new ListNode();
         nn.val=carry;  
        
         if(head==null)
          {
          head=nn;
          temp=nn; 
          }
        
         else
         { temp.next=nn;
          temp=temp.next;
         }  
     }
    
    return head;
}
    }
